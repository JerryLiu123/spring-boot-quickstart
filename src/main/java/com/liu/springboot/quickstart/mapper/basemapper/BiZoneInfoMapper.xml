<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liu.springboot.quickstart.dao.basedao.BiZoneInfoMapper" >
  <resultMap id="BaseResultMap" type="com.liu.springboot.quickstart.model.BiZoneInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="v_fileid" property="vFileid" jdbcType="INTEGER" />
    <result column="z_hdfsfile" property="zHdfsfile" jdbcType="VARCHAR" />
    <result column="z_file" property="zFile" jdbcType="VARCHAR" />
    <result column="z_available" property="zAvailable" jdbcType="INTEGER" />
    <result column="z_isdel" property="zIsdel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, v_fileid, z_hdfsfile, z_file, z_available, z_isdel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bi_zoneinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bi_zoneinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liu.springboot.quickstart.model.BiZoneInfo" >
    insert into bi_zoneinfo (id, v_fileid, z_hdfsfile, 
      z_file, z_available, z_isdel
      )
    values (#{id,jdbcType=INTEGER}, #{vFileid,jdbcType=INTEGER}, #{zHdfsfile,jdbcType=VARCHAR}, 
      #{zFile,jdbcType=VARCHAR}, #{zAvailable,jdbcType=INTEGER}, #{zIsdel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liu.springboot.quickstart.model.BiZoneInfo" >
    insert into bi_zoneinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="vFileid != null" >
        v_fileid,
      </if>
      <if test="zHdfsfile != null" >
        z_hdfsfile,
      </if>
      <if test="zFile != null" >
        z_file,
      </if>
      <if test="zAvailable != null" >
        z_available,
      </if>
      <if test="zIsdel != null" >
        z_isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="vFileid != null" >
        #{vFileid,jdbcType=INTEGER},
      </if>
      <if test="zHdfsfile != null" >
        #{zHdfsfile,jdbcType=VARCHAR},
      </if>
      <if test="zFile != null" >
        #{zFile,jdbcType=VARCHAR},
      </if>
      <if test="zAvailable != null" >
        #{zAvailable,jdbcType=INTEGER},
      </if>
      <if test="zIsdel != null" >
        #{zIsdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liu.springboot.quickstart.model.BiZoneInfo" >
    update bi_zoneinfo
    <set >
      <if test="vFileid != null" >
        v_fileid = #{vFileid,jdbcType=INTEGER},
      </if>
      <if test="zHdfsfile != null" >
        z_hdfsfile = #{zHdfsfile,jdbcType=VARCHAR},
      </if>
      <if test="zFile != null" >
        z_file = #{zFile,jdbcType=VARCHAR},
      </if>
      <if test="zAvailable != null" >
        z_available = #{zAvailable,jdbcType=INTEGER},
      </if>
      <if test="zIsdel != null" >
        z_isdel = #{zIsdel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liu.springboot.quickstart.model.BiZoneInfo" >
    update bi_zoneinfo
    set v_fileid = #{vFileid,jdbcType=INTEGER},
      z_hdfsfile = #{zHdfsfile,jdbcType=VARCHAR},
      z_file = #{zFile,jdbcType=VARCHAR},
      z_available = #{zAvailable,jdbcType=INTEGER},
      z_isdel = #{zIsdel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!-- ================================= -->
  <insert id="insertReturnKey" parameterType="com.liu.springboot.quickstart.model.BiZoneInfo" useGeneratedKeys="true" keyProperty="id">
    insert into bi_zoneinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="vFileid != null" >
        v_fileid,
      </if>
      <if test="zHdfsfile != null" >
        z_hdfsfile,
      </if>
      <if test="zFile != null" >
        z_file,
      </if>
      <if test="zAvailable != null" >
        z_available,
      </if>
      <if test="zIsdel != null" >
        z_isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="vFileid != null" >
        #{vFileid,jdbcType=INTEGER},
      </if>
      <if test="zHdfsfile != null" >
        #{zHdfsfile,jdbcType=VARCHAR},
      </if>
      <if test="zFile != null" >
        #{zFile,jdbcType=VARCHAR},
      </if>
      <if test="zAvailable != null" >
        #{zAvailable,jdbcType=INTEGER},
      </if>
      <if test="zIsdel != null" >
        #{zIsdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <select id="selectUpdateHDFS" resultMap="BaseResultMap">
    SELECT * FROM bi_zoneinfo <![CDATA[ WHERE z_hdfsfile IS NOT NULL AND z_hdfsfile != '' AND z_file != '0' ]]>
  </select>
  
  <update id="updateBatch" parameterType="list">
  update bi_zoneinfo
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="v_fileid =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          <if test="i.vFileid!=null">
            when id=#{i.id} then #{i.vFileid,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      
      <trim prefix="z_hdfsfile =case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          <if test="i.zHdfsfile!=null">
            when id=#{i.id} then #{i.zHdfsfile,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      
      <trim prefix="z_file = case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          <if test="i.zFile!=null">
            when id=#{i.id} then #{i.zFile,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      
      <trim prefix="z_available = case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          <if test="i.zAvailable!=null">
            when id=#{i.id} then #{i.zAvailable,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      
      <trim prefix="z_isdel = case" suffix="end,">
        <foreach collection="list" item="i" index="index">
          <if test="i.zIsdel!=null">
            when id=#{i.id} then #{i.zIsdel,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where 
    <foreach collection="list" separator="or" item="i" index="index" >
      id=#{i.id}
    </foreach>
  </update>
</mapper>